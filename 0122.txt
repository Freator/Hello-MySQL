（结合sql文档）

连接查询（join）：将多张表进行记录的拼接，记录可能变化，字段数会增加
意义：用户查看数据的时候可以来自多张表


使用 ： 左表 join 右表



四类连接查询：内连接，外连接，自然连接和交叉连接

（1）交叉连接：cross join，即笛卡尔积
语法：左表 cross join 右表 ：等价于  多表数据源
意义：无太大实用意义，只是为了保证连接的完整性


（2）内连接：[inner] join ：左表中有某个条件与右表中的某个条件相同即可以匹配，将此结果保留输出
语法：左表 [inner] join 右表 on 左表.字段 = 右表.字段;

此处有字段别名和表别名的使用：在查询数据时不同的表有同名字段，需要加上表名以区分，但是表名有时太长不方便使用

内连接可以没有on 后面的条件，此时为笛卡尔积，当然还可以使用where 代替 on,但是后者效率高一些（where找所有，on找到就不匹配其它的了）


（3）外连接：outer join（实际没有outer这个关键字）
以某张表为主，取出所有记录，然后每条与外表进行连接，匹配则保留，不匹配则其它表字段置空

分为两种：left join ：左表为主
          right join：右表为主
基本语法：（查看sql文档，on 一定要有）
左右连接虽有主副表差异，但是显示结果依然左表在左，当然左右表可以互转换

（4）自然连接：natural join：自动匹配连接条件：系统以同名字段作为匹配条件，如果有多个，那就均作为条件，结果合并同名字段
分为自然内连接和自然外连接

自然内连接：左表 natural join 右表
自然外连接：左表 natural left/right join 右表

其实内连接和外连接都可以模拟自然连接，使用同名字段，合并字段
：左表 left/right/inner join 右表 using(字段名);-- 即使用同名字段作为连接条件，自动合并条件





















