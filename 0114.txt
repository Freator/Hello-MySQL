主键  primary key

增加主键的三种方式
（1）创建表时直接指定，主键默认不为空，缺点，只能使用一个字段作为主键
（2）创建表时，在所有的字段后，使用primary key 来创建主键。可以含有复合主键，也看成一个主键
（3）表已经建立好之后还没有主键时，可以后面再追加主键
     alter table 表名 add primary key（字段列表）
     前提：表中字段对应的数据本身是独立的，没有重复数据

主键约束：不允许对应字段重复


更新主键和删除主键
主键没有办法更新，只能先删除再增加
alter table 表名 drop primary key;


主键分类
业务主键（学号，课程号等）
逻辑主键（自增长的一些id等,这个用的比较多）




自动增长

系统自动触发的 +1操作，通常和主键搭配

auto_increment
1.任何一个字段要自增长前提是自身是一个索引（KEY一栏有值）
2.自增长必须是整型数
3.一张表只能有一个自增长字段

使用 ：请查看sql文档案例 触发自增长

自增长如果对应的字段输入了值则自增长失效但是下一次还是能触发，并且选择最大值 + 1
可以通过查看创建表语句查看下一次的自增长的值 ：
show create table 表名


修改自增长
自增长如果是涉及到字段改变，必须先删除自增长，再增加，因为一张表只能与一个自增长
修改当前自增长已经存在的值，其新值必须不小于当前的值，否则不生效

为什么自增长从1开始，每次都是自增1？
所有系统的表现（如字符集，校对集）都是由系统内部的变量进行控制的，
查看自增长对应的变量：show variables like 'auto_increment%';

可以修改变量实现不同的效果，但是修改是对整个数据库修改（修改是会话级别的，即仅限当次操作有效，下次进入又变回默认）


删除自增长
字段属性，可以使用modify来修改
alter table 表名 modify 字段 类型;（即不加上自增长即可）




唯一键
一张表中只能有一个主键，但是除主键字段外另外一些字段也只能是唯一值不能重复，所以用唯一键（unique key）来解决
与主键本质相似，但默认允许为空（null）,而且可以多个为空，因为空字段不参与唯一性比较

增加唯一键
方法与增加主键差不多，三种方式
（1）建表时直接说明
（2）在所有的字段之后说明，复合唯一键
（3）在创建表之后增加唯一键

唯一键约束：与主键唯一区别即允许为空，当然，如果在建表时不允许唯一键为空，则与主键的约束一致

更新唯一键和删除唯一键
先删除后新增（唯一键可以有多个所以对不同字段操作时可以不删除当前唯一键）
alter table 表名 drop unique key ; -- 错误，唯一键可能有多个
alter table 表名 drop index 索引名字 ; -- 正确方法，唯一键默认使用字段名作为索引名字




索引
建立在字段之上
索引：有某种算法将已有数据单独建立一个文件，能快速匹配数据

意义：
（1）提高查询数据的效率
（2）约束数据的有效性（唯一性等）

增加索引的条件：索引文件可能比数据文件大，会耗费磁盘空间
如果某个字段需要作为查询的条件经常使用，则可以使用索引
如果某个字段需要进行数据的有效性约束，也可以使用索引（主键，唯一键）
MySQL中提供了多种索引
1.主键索引 ： primary key
2，唯一索引 : unique key
3.全文索引 : fulltext index
4.普通索引 : index


全文索引：根据文章内部的关键字进行索引，最大的问题在于如何确定关键字
英文比较简单，单词之间有空格，中文很难，没有空格而且可以随意组合（难以分词：sphinx）
























