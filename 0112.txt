中文数据问题本质是字符集的问题

GBK 一个中文对应两个字节
UTF8 一个中文对应三个字节


查看所有能识别的字符集：show character set;
查看服务器默认对外字符集   show variables like "character_set%"（本机上安装时设置了默认是GBK，而视屏讲解中是UTF8）

若需要修改，使用 set character_set_client = utf8(/gbk/...);


以上 set 变量 = 值;  这样的修改只是当前有效（会话级别的），下次登录又会变成默认状态，
快捷设置字符集 ： set names gbk; -- 同时改变了client ，results和connection。
Connection 连接层是字符集转变的中间着，都设置成一样会更快，不改也可以







校对集问题

数据比较的方式，三种格式
   _bin : binary ,二进制比较，取出二进制，一位一位比较，区分大小写
   _cs : case sensitive 大小写敏感，区分大小写
   _ci : case insensitive 大小写不敏感，不区分

查看所有的校对集 show collation;


校对集的应用：只有有数据产生比较时，校对集才会生效

对比：使用utf8 的 _bin 和 _ci 来验证两种不同校对集的效果（看sql文件）

比较即加上：order by 字段名 [asc|desc];  asc升序，后面那个是降序

校对集必须在没有数据之前声明好，如果有数据再进行校对集修改则是无效的






WEB 乱码问题（此课程前他们学过了PHP了）

动态网站由三个部分构成：浏览器，Apache服务器（PHP），数据库服务器，三者都有自己的字符集，尤其中文，容易乱码

所以要统一编码（三码合一）

但是实际不可能，因为浏览器是用户管理的，不可控制，
但是必须要解决这些问题，所以要靠PHP解决











